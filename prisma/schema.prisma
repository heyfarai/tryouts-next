generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  clerkUserId String    @unique
  email       String    @unique
  role        Role      @default(GUARDIAN)
  createdAt   DateTime  @default(now())
  isLead      Boolean   @default(false)
  leadSource  String?
  guardian    Guardian?
  player      Player?
}

model Guardian {
  id            String         @id @default(uuid())
  userId        String         @unique
  phone         String?
  user          User           @relation(fields: [userId], references: [id])
  players       Player[]
  registrations Registration[]
}

model Player {
  id            String               @id @default(uuid())
  userId        String?              @unique
  firstName     String
  lastName      String
  birthdate     DateTime
  gender        String
  guardianId    String
  checkInId     Int?                 @unique
  guardian      Guardian             @relation(fields: [guardianId], references: [id])
  user          User?                @relation(fields: [userId], references: [id])
  registrations PlayerRegistration[]
}

model Registration {
  id         String               @id @default(uuid())
  guardianId String
  tryoutName String
  createdAt  DateTime             @default(now())
  status     RegistrationStatus   @default(PENDING_PAYMENT)
  isWalkIn   Boolean              @default(false)
  payment    Payment?
  players    PlayerRegistration[]
  guardian   Guardian             @relation(fields: [guardianId], references: [id])
}

model PlayerRegistration {
  id             String       @id @default(uuid())
  registrationId String
  playerId       String
  checkedInAt    DateTime?
  checkedOutAt   DateTime?
  player         Player       @relation(fields: [playerId], references: [id])
  registration   Registration @relation(fields: [registrationId], references: [id])
}

model Payment {
  id             String       @id @default(uuid())
  stripeId       String       @unique
  amount         Int
  currency       String
  status         String
  receiptUrl     String?
  createdAt      DateTime     @default(now())
  registrationId String       @unique
  registration   Registration @relation(fields: [registrationId], references: [id])
}

enum Role {
  GUARDIAN
  PLAYER
  ADMIN
  COACH
}

enum RegistrationStatus {
  PENDING_PAYMENT
  COMPLETED
  ABANDONED
}
